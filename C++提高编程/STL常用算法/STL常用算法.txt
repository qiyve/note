5、 STL 常用算法

     概念：
 
        算法主要是由头文件<algorithm><functional><numeric>组成

        <algorithm> 是所有STL头文件中最大的一个，范围涉及到比较、交换、查找、遍历操作、复制、修改等等

        <numeric>体积很小，只包括几个在序列上面进行简单数学运算的模板函数

        <functional>定义了一些模板类，用以声明函数对象     

   5.1 常用遍历算法

       学习目标：

        掌握常用的遍历算法

       算法介绍：

        for_each           //遍历容器

        transform        //搬运容器到另一个容器中

   5.1.1 for_each

       功能描述：

        实现遍历容器

       函数原型：

            for_each(iterator beg, interator end ,  _func );

            //遍历算法遍历容器元素

            //beg开始迭代器

            //end结束迭代器

            //_func函数或者函数对象

   5.1.2 transform

      功能描述：

           搬运容器到另一个容器中

      函数原型：

          transform(itreator beg1, iterator end1, iterator beg2, _func );

          //beg1 源容器开始迭代器
        
          //end1 源容器结束迭代器

          //beg2 目标容器开始迭代器

          //_func 函数或者函数对象

    
     5.2 常用查找算法

        学习目标：

           掌握常用的查找算法

        算法简介：

           find                   //查找元素

           find_if               //按条件查找元素

           adjacent_find   //查找相邻重复元素

           binary_search   //二分查找法

           count               //统计元素个数

           count_if            //按条件统计元素个数

     5.2.1 find

       功能描述

         查找指定元素，找到返回指定元素的迭代器，找不到返回结束迭代器end

       函数原型：

            find ( iterator beg ,  iterator end ,value );

      //按值查找元素，找到返回指定位置的迭代器，找不到返回结束迭代器位置

      //beg 开始迭代器

      //end 结束迭代器

      //value 查找的元素

    5.2.2  find_if 
  
       功能描述：

         按条件查找元素

        函数原型：
 
           find ( iterator beg ,  iterator end , _pred );

        //按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器
 
         //beg 开始迭代器

         //end 结束迭代器

         //_pred 函数或者谓词 （返回bool类型的仿函数）

    5.2.3 adjacent_find

       功能描述：

         查找 相邻 重复 元素

      函数原型：
 
         adjacent_find( iterator beg, iterator end);

        //查找相邻重复元素，返回相邻元素的第一个位置的迭代器

        //beg 开始迭代器

        //end 结束迭代器

    5.2.4 binary_search

      功能描述：

        查找指定元素是否存在

      函数原型：

         bool binary_search( iterator beg, iterator end, value);
 
         //查找指定的元素 查到返回true 否则返回false

         //注意：在 无序序列中不可用

         //beg 开始迭代器

         //end 结束迭代器

         //value 查找的元素

    5.2.5 count 

      功能描述：

         统计元素个数

       函数原型：

          count ( iterator beg, iterator end, value );

      //统计元素出现次数

      //beg 开始迭代器

      //end 结束迭代器
 
      //value 统计的元素

    
   5.2.6 count_if
    
        功能描述：

           按条件统计元素个数

         函数原型：
 
           count_if ( iterator beg, iterator end , _pred );

           //按条件统计元素出现次数            
 
           //beg 开始迭代器

           //end 结束迭代器
  
           //_pred  谓词
 