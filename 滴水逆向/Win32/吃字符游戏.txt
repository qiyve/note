吃字母游戏
   TCHAR 字符串操作函数

    _tcslen（str）// 获取字符串长度
    _tcsrchr（str, L'\\')  //反向搜索获得最后一个TCHAR的位置
    _stprintf(TCHAR *buffer,const TCHAR *format [,argument] ... )    //获得一个格式化字符串
    _tcsduo	//给一个指针分配源字符串大小的内存并从源字符串copy值
    _tcstok 	//按标记将字符串拆分
    tcscpy		//拷贝字符串

1.功能

     在资源文本框中输入一串字母
     点击按钮，将把字符串中的字母读入自己的文本框中，然后会叫缓冲区置0；
     4个消费者线程会从缓存区中将字母读入自己的文本框中，然后会将缓冲区置0；
     生产者线程在缓冲区为0时再次将后面的字句写入缓冲区；

2.思路
   （1）线程
      需要生产者线程；用来读取资源文本框中的字符串，并按顺序将字符串中的每个字符写入缓存区；

    线程同步：
        消费者线程需要在生产者线程将字符写入缓冲区后才能从缓冲区中读取字符；

    线程互斥：
        同一时刻只能有一个线程来操作缓冲区；

   生产者：
       从资源文本框中读取字符串；
       循环将每个字符写入缓冲区文本框
       缓冲区文本框有2个，需要循环判断，只要其中一个为0则将字符写入；写入后退出循环，开始处理下一个字符；
       当字符串中的所有字符处理完后生产者线程结束；
       可以获取字符串的长度来判断生产者线程结束标记；

   消费者
     主要做三件事：
       从缓冲区文本框中读取字符；
       见缓冲区中的字符写入自己的文本框；
       将缓冲区文本框置0告诉生产者这个缓冲区中的字符被读完了；
  线程结束   
       消费者线程需要在生产者将所有字符处理完，并且缓冲区中的字符全部被读完后结束；
       如果线程不结束程序会卡死
       结束线程有两种方式：超过一定的等待时间，用全局变量做标记，生产者完成后修改标记；
       这里用第一种方式来实现线程结束












































   