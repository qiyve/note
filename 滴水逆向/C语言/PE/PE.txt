
宏定义说明：

一、无参数的宏定义的一般形式为：#define  标识符   字符序列

1、只作字符序列的的替换工作，不做任何语法的检查
2、如果宏定义不当，错误要到预处理之后的编译阶段才能发现

二、带参数宏定义：#define  标识符（参数表）字符序列

 #define  MAX （A，B）  ( (A)>(B) ? (A) : (B)

    注意：
1、宏名称标识符与左括号之间不允许由空白符，应紧接在一起
2、宏与函数的区别：函数分配额外的堆栈空间，而宏只是替换、
3、为了避免出错，宏定义中给形参加上括号
4、末尾不需要分号
5、define可以替代多行的代码，记得后买你加 \
 
   #define  MALLOC（n，type）\
			((type*)malloc(n)*sizeof（type))

malloc 注意事项

 1.使用sizeof(类型）*n 来申请内存大小
 2.malloc返回类型为void*类型  需要强转
 3.申请完内存一定要判断是否申请成功
 4.初始化
 5.使用完清空堆区
 6.指针值设为NULL


重点：

PE文件的第一个部分是IMAGE_DOS_HEADER，大小为64B，这里面有两个重要的数据成员。
第一个为e_magic，这个必须为MZ，即0x5A4D。当然，0x5A4D这是典型的小端格式（Little Endian）；
另一个重要的数据成员是最后一个成员e_lfanew，这个成员的值为IMAGE_NT_HEADERS的偏移

在一个有效的 PE 文件里，Signature 字段被设置为00004550h, ASCII 码字符是“PE00”。标志这 PE 文件头的开始。
“PE00” 字符串是 PE 文件头的开始，DOS 头部的 e_lfanew 字段正是指向这里。


联合体：

 1、联合体的成员是共享内存空间的
 2、联合体的内存空间大小是联合体成员中对内存空间大小要求最大的空间大小
 3、联合体最多只有一个成员有效


1、 Name  8字节  一般情况下以“\0”结尾的ASCII码字符串来表示的名称，内容可以自定义
 注意：该名称并不遵守必须以“\0”结尾的规律，如果不以“\0”结尾，系统会截取8字节的长度进行处理

2、Misc 双字  是该节在没有对齐的真实尺寸，该值可以不准确、

3、VirtualAddress 节区在内存中的偏移地址。加上ImageBase才是在内存中的真正地址.

4、SizeOfRawData  节在文件中对齐后的尺寸.

5、PointerToRawData 节区在文件中的偏移.

6、PointerToRelocations 在obj文件中使用 对exe无意义						
						
7、PointerToLinenumbers 行号表的位置 调试的时候使用						
						
8、NumberOfRelocations 在obj文件中使用  对exe无意义						
						
9、NumberOfLinenumbers 行号表中行号的数量 调试的时候使用						
						
10、Characteristics 节的属性						
						






























